name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar las credenciales de AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Loguearse en Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4. Obtener el ID de la cuenta de AWS
      - name: Get AWS Account ID
        id: account-id
        run: echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      # 5. Definir variables
      - name: Set variables
        id: vars
        run: |
          echo "ECR_REGISTRY=${ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV  # Puedes cambiar esto según tu estrategia de versionado

      # 6. Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME .

      # 7. Etiquetar la imagen Docker
      - name: Tag Docker image
        run: |
          docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest

      # 8. Push de la imagen a ECR
      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest
