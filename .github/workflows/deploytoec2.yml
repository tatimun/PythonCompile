name: Deploy to EC2 with Docker Compose

on:
  workflow_dispatch: # Ejecutar manualmente desde GitHub Actions

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest
    steps:
      # 1. Configurar las credenciales de AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 2. Ejecutar docker-compose en EC2 usando SSM con etiquetas
      - name: Run docker-compose on EC2 via SSM
        run: |
          aws ssm send-command \
            --targets "Key=tag:Name,Values=FastAPIStack" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying application using Docker Compose" \
            --parameters '{"commands":[
              "aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com",
              "cat <<EOF > docker-compose.yml",
              "version: \\\"3.8\\\"",
              "services:",
              "  pythoncompile:",
              "    image: ${ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest",
              "    container_name: pythoncompile-app",
              "    ports:",
              "      - \\\"8000:8000\\\"",
              "    environment:",
              "      - OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}",
              "EOF",
              "docker-compose pull",
              "docker-compose up -d"
            ]}' \
            --region ${{ secrets.AWS_REGION }}
